:LATEX_SETTINGS:
#+EXPORT_FILE_NAME: bca-sujal-pawan-project2-proposal
# +BIBLIOGRAPHY: bibliography.bib
#+LATEX_HEADER: \pagenumbering{roman}
#+LATEX_HEADER: \graphicspath{{C:\\Users\\sujal\\programming\\college-files\\assets\\images\\}}

#+BIBLIOGRAPHY: bibliography.bib
#+OPTIONS: toc:nil tasks:nil
#+LATEX_HEADER: \author{Sujal Gurung 6-2-378-82-2020\\Pawan Sharma Humagain 6-2-378-68-2020}
#+LATEX_HEADER: \date{\today}

#+LATEX_HEADER: \usepackage[margin=1in, left=1.25in]{geometry}
#+LATEX_HEADER: \usepackage{placeins}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \usepackage{svg}
#+LATEX_HEADER: \usepackage[acronym]{glossaries}
#+LATEX_HEADER: \makeglossaries
#+LaTeX_HEADER: \usepackage{pdfpages}
#+LaTeX_HEADER: \usepackage{chngcntr}
#+LATEX_HEADER: \counterwithin{figure}{section}
#+LATEX_HEADER: \counterwithin{table}{section}


#+LaTeX_CLASS: article
#+LATEX_HEADER: \AddToHook{cmd/section/before}{\clearpage}
#+LATEX_CLASS_OPTIONS: [a4paper]
#+LaTeX_HEADER: \setstretch{1.5}
#+LaTeX_HEADER: \usepackage{times}
#+LaTeX_HEADER: \usepackage[12pt]{moresize}
#+LaTeX_HEADER: \AtBeginDocument{\fontsize{12}{15}\selectfont}
#+LaTeX_HEADER: \usepackage{titlesec}
#+LaTeX_HEADER: \titleformat{\chapter}{\bfseries\fontsize{16}{18}\selectfont}{\thechapter}{1em}{}
#+LaTeX_HEADER: \titleformat{\section}{\bfseries\fontsize{14}{16}\selectfont}{\thesection}{1em}{}
#+LaTeX_HEADER: \titleformat{\subsection}{\bfseries\fontsize{12}{14}\selectfont}{\thesubsection}{1em}{}
#+LaTeX_HEADER: \usepackage{caption}
#+LaTeX_HEADER: \DeclareCaptionFormat{myformat}{\fontsize{12}{12}\selectfont#1#2#3}
#+LaTeX_HEADER: \captionsetup{format=myformat,justification=centering}
#+LaTeX_HEADER: \captionsetup[figure]{position=bottom}
#+LaTeX_HEADER: \captionsetup[table]{position=top}
:END:
:export-titlepage:
# !!!!!!!!!!!!            don't edit
\begin{large}

\makeatletter
\begin{titlepage}
\centering
\includegraphics[scale=0.5]{C:/Users/sujal/programming/college-files/assets/images/tu-logo-transparent.png}

\vfill

\textbf{\Large{Tribhuvan University \\Faculty of Humanities and Social Sciences\\}}
\vfill

\textbf{\Large{A Project proposal on: \\Daraz price-tracker chatbot }}
\vfill

\textbf{Submitted to: \\Department of Computer Application, \\ Himalaya College of Engineering, \\Chyasal,Lalitpur}
\vfill

\textbf{\emph{In partial fulfillment of the requirements for the Bachelors in Computer Application}}

\textbf{Submitted by:}\\\@author\\\@date\\
\vfill

Under the Supervision of
\textbf{\\Er. Himal Chand Thapa}

\makeatother
\end{titlepage}
\end{large}
\clearpage
:end:
:acronyms:
#+BEGIN_EXPORT latex
%% \newacronym{label}{abbreviation}{full form} 
% \newacronym{html}{HTML}{Hyper Text Markup Language}

%% list of acronyms is created right before introduction
%%%% usage options:
% \acrlong{label}    
% \acrshort{label}
% \acrfull{label}   => prints both short & long form
#+END_EXPORT
:end:

#+begin_export latex
  \clearpage \tableofcontents \clearpage
#+end_export

* Introduction
#+LATEX:\pagenumbering{arabic}

E-commerce has been a great innovation in the fields of both technology & business. 
It allows both buyers and sellers to perform various trading activities such as marketing, product inquiry,
purchase through online/digital means. One advantage for buyers is that most e-commerce platforms
show product prices, which allows them to make a purchasing decision from the comfort of their home.

Even in Nepal, e-commerce is a useful tool for connecting today's modern businesses with the
digitized populace, and making trade possible between them.
Daraz is a major and popular ecommerce platform in Nepal, seeing upto 7 lakh (0.7 million)
daily users[cite:@daraz_sales_record]. With frequent sales, promo campaigns and price drops,
product prices change constantly. For this project, we aim to make a chatbot that
allows users to specify product on Daraz, and then notifies them of price changes. This proposal
outlines what our proposed project is going to accomplish in detail, and provides a foundation
for the project development lifecycle.

* Problem Statement
- *Buyers may miss out on discounts, special offers:*\\
  Often times, buyers might not be aware of special offers that reduce the price of a product they want.
  This might be due to e-commerce platforms not informing them of such things, or not realizing
  that offers apply to a specific product.

  Such offers also generally only last for a certain period of time. Buyers may not be able to 
  purchase the product during that time.

- *Buyers may have to pay more for a product due to purchasing at the wrong time*

- *Hassle of checking price regularly:*\\
  Having to constantly check if the price of a wanted product has decreased can be a
  time-consuming process.

- *Sellers may lose potential sales due to buyers seeing high price:*\\
  Economics' basic law of demand[cite:@econ_law_demand] states that when price of a good decreases,
  its demand increases i.e. consumers tend to buy more of that good. Buyers may see non-discounted
  price of a product and not buy it, thinking it's too expensive.

  Conversely, seeing discounts on products can influlence potential buyers' decisions, thinking
  they are getting a good deal, as shown by a 2021 study[cite:@impact_discount_purchase].

* Objectives
- To create an easy to use price-tracking chatbot
- To implement Waterfall model of software development during the project's lifecycle

* Methodology
** Requirement Identification 
This project makes use of the *Waterfall development* approach in order to set concrete requirements & build towards achieving them.

#+CAPTION: Waterfall model of Software Development
[[file:diagrams/waterfall-model.jpg]]
\FloatBarrier

*** Study of existing system
**** CamelCamelCamel
It is a price-tracking website for Amazon products.
***** Pros
- shows price history of products to visualize how low / high a product's price can go
- sends price drop alerts to users via email 
***** Cons
- Only supports price-tracking for Amazon, which can't be used in Nepal due to shipping,
  payment issues. As such, CamelCamelCamel is not suitable for our usecase of price-tracking
  Daraz products in Nepal.

#+LATEX: \clearpage
*** Requirement Collection
**** Functional requirements    
***** User
- can request bot to track prices of multiple products in a "wishlist"
- should be notified when tracked products' price decreases
- can specify minimum price for a product such that they are only notified if price falls below that amount
- can manually trigger bot to check current price of product
- can request bot to stop tracking a product

***** Bot Admin
- can see list of users and products they are tracking 
- can manually remove users and products
- can manually send specific messages to users. e.g.: useful for troubleshooting, providing tech support

**** Non-Functional requirements
- *No downtime:* Preferrably, bot should be available at all times.
- Bot should have fast response time 

- *Simple to use:* Users should be able to interact with the bot through a simple GUI.
  The bot should also provide help messages regarding how to use specific text commands to 
  interact with it.

- *Reliability:* User should always be notified when the notification conditions are met
  i.e. they should not miss out on price drops.

#+LATEX: \clearpage
**** Use Case diagram

#+CAPTION: Use case diagram for CardsQL
#+attr_latex: :width 400px
#+attr_org: :width 400pX
[[file:diagrams/use-case.jpg]]

#+begin_export latex
 \FloatBarrier
 \clearpage 
#+end_export
** Feasibility Study 
*** Technical Feasibility
The proposed price tracking chatbot is technically feasible due to the availability of:

- *Telegram's bot features*: Telegram is a popular messaging service similar to WhatsApp.
  It provides advanced features for developing "chatbots", which are special Telegram accounts.
  These are basically a backend server that sends a text response to users based on their specific text message.

  It also allows creating GUI buttons for performing actions, instead of users having to send
  specific text commands. This achieves our non-functional requirement of making the chatbot 
  simple to use.

- *Daraz product API:* Daraz provides a powerful, well-documented REST API for getting their products' data.
  This simplifies the devlopment process. 

- *Web scraping libraries:* Tools like Puppeteer can be combined with custom code to scrape
  data from Daraz's website for cases when the Daraz API is not enough.

- *Front-end technologies:* HTML, CSS for creating user-friendly interface for the chatbot's
  GUI buttons and admin interface. 

- *Back-end technologies:* NodeJS environment for using JavaScript on the server-side.
  
- *SQLite Database:* As a single-file databse, SQLite vastly simplifies local development
  as there is no need to run a separate server for it. The database can then easily used
  for the production environment i.e. when the chatbot is made publicly available.

*** Operational Feasibility
The app's operational feasibility is dependent on:

- *Data accuracy:* This refers to the reliability of the price data extracted from online retailers.
  Price data is guaranteed to always be up to date due to using Daraz's official API as well
  as scraping data from their live website.

- *Daraz website changes*:
  Making extensive use of the Daraz API prevents future issues caused by changes to Daraz's website's HTML structure.
  This is because most APIs are not modified after being publicly released, allowing
  the project to be operational long-term even without maintenance. 

  This can be an issue when using web-scraping techniques to get product data. Error handling
  can be implemented to notify developers / admin when such issues arise & fix them promptly. 

- *Notification / message delivery reliability:* Telegram is a major service with a robust
  messaging system. Thus, we can be sure that all messages between users and bots are sent properly.

- *Server uptime*: Back-end server hosting providers ensure that the chatbot stays operational at all times.

*** Economic Feasibility
The economic feasibility of the project is high due to:
- *Low development costs:* The chatbot can be developed using free or open-source technologies.

- *No hosting costs:* It can be hosted on a personal computer for demo purposes,
  or with free plans from cloud platforms like Render to make it publicly accesible.
  The SQLite database can also be hosted for free on SQLiteCloud.

- *Potential revenue streams:* While the chatbot can be initially offered for free,
  monetization options for premium features can be explored in the future.
 The low initial investment and potential for future revenue make this project economically viable.

** High level design of System
As the following are high level representations of the system, they aim to provide a basic
understanding of the system and thus, leave out intricate implementation details.

#+LATEX: \clearpage
*** Methodology/ Working Mechanism
The flowchart for the major operations of the chatbot are as follows

**** Add Products to track
#+CAPTION: Flow chart for adding products to be tracked
#+attr_latex: :width 200px
[[file:diagrams/flowchart-add.png]]
\FloatBarrier

#+LATEX: \clearpage
**** Regularly check price of products
#+CAPTION: Flow chart for chatbot to check price regularly
#+attr_latex: :width 240px
[[file:diagrams/flowchart-check-price.png]]
\FloatBarrier
#+begin_export latex
  \clearpage 
#+end_export
* Gantt Chart 

#+CAPTION: Gantt chart based on Waterfall model
[[file:diagrams/gantt-chart.jpg]]
\FloatBarrier
* Expected Outcome 
- Save time & money for buyers
- Inform users of price drops, frequently occuring campaings
- Promote e-commerce
- Increase sales for sellers on Daraz

* References 
#+cite_export: csl ~/.emacs.d/packages/ieee.csl
#+LATEX: \setlength{\parindent}{0cm}
#+PRINT_BIBLIOGRAPHY:
